/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asciiconverter;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import javax.swing.Icon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JTextArea;

/**
 *
 * @author Willhelmina
 */
public class GuiForm extends javax.swing.JFrame implements PropertyChangeListener{

    /**
     * Creates new form GuiForm
     */
    
    BufferedImage img = null;
    String outTxt;
    @Override
    
    //sets the image Icons, launches the ascii Image
    //realized I could do this from the SwingWorker after the fact
    //by simply passing the Icon itself as a parameter
    public void propertyChange(PropertyChangeEvent evt) {
        String prop = evt.getPropertyName();
        
        //switch statements for doing things... terribly ugly
        //also could have changed the logic here to make it all 
        //one switch
        if ("icon".equals(prop.substring(0, 4))){
            Icon i = (Icon) evt.getNewValue();
            switch (prop) {

                case "iconA":
                    //set first Icon
                    imageView1.setIcon(i);
                    System.out.println(prop + " Aquired");
                    imageFrame1.setSize(i.getIconWidth(),
                            i.getIconHeight()
                    );
                    break;
                    
                //set second Icon    
                case "iconB":
                    imageView2.setIcon(i);
                    System.out.println(prop + " Aquired");
                    imageFrame2.setSize(i.getIconWidth(),
                            i.getIconHeight()
                    );
                    break;
                    
                //launch converted image in new window
            }
            pack();
        } 
        else if (prop.equals("txt1")) {
            outTxt = (String)evt.getNewValue();
            lauchTxt();
        }
        else {
            System.out.println("bad arg " + prop);
        }
    }
    
    
    //filter for filechooser
    class imageFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with image extension
            return file.isDirectory() || 
                    file.getAbsolutePath().endsWith(".jpg") ||
                    file.getAbsolutePath().endsWith(".png") ||
                    file.getAbsolutePath().endsWith(".bmp") ;
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog
            return "image documents (*.jpg, *.png, *.bmp)";
        }
    } 
    
    public GuiForm() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        imageFrame2 = new javax.swing.JPanel();
        imageFrame1 = new javax.swing.JPanel();
        txtField = new javax.swing.JTextField();
        imageView1 = new javax.swing.JLabel();
        imageView2 = new javax.swing.JLabel();
        loadButton = new javax.swing.JButton();

        fileChooser.setFileFilter(new imageFilter());

        imageFrame2.setBackground(new java.awt.Color(0, 0, 0));
        imageFrame2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        imageFrame2.setAlignmentX(0.0F);
        imageFrame2.setAlignmentY(0.0F);
        imageFrame2.setPreferredSize(new java.awt.Dimension(200, 200));

        javax.swing.GroupLayout imageFrame2Layout = new javax.swing.GroupLayout(imageFrame2);
        imageFrame2.setLayout(imageFrame2Layout);
        imageFrame2Layout.setHorizontalGroup(
            imageFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 194, Short.MAX_VALUE)
        );
        imageFrame2Layout.setVerticalGroup(
            imageFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        imageFrame1.setBackground(new java.awt.Color(0, 0, 0));
        imageFrame1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        imageFrame1.setForeground(new java.awt.Color(255, 255, 255));
        imageFrame1.setAlignmentX(0.0F);
        imageFrame1.setAlignmentY(0.0F);
        imageFrame1.setPreferredSize(new java.awt.Dimension(200, 200));

        txtField.setBackground(new java.awt.Color(0, 0, 0));
        txtField.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        txtField.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout imageFrame1Layout = new javax.swing.GroupLayout(imageFrame1);
        imageFrame1.setLayout(imageFrame1Layout);
        imageFrame1Layout.setHorizontalGroup(
            imageFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtField, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        );
        imageFrame1Layout.setVerticalGroup(
            imageFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtField, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.black);

        imageView1.setBackground(new java.awt.Color(0, 0, 0));
        imageView1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageView1.setText("jLabel1");
        imageView1.setAlignmentY(0.0F);
        imageView1.setOpaque(true);
        imageView1.setPreferredSize(new java.awt.Dimension(200, 200));

        imageView2.setBackground(new java.awt.Color(0, 0, 0));
        imageView2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageView2.setText("jLabel1");
        imageView2.setAlignmentY(0.0F);
        imageView2.setOpaque(true);
        imageView2.setPreferredSize(new java.awt.Dimension(200, 200));

        loadButton.setText("Load Image");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loadButton)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imageView1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageView2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imageView1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imageView2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadButton))
        );

        imageView2.getAccessibleContext().setAccessibleName("jLabel2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //load button operation, launches file chooser
    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            (new BackgroundImageProcess(file, (PropertyChangeListener)this)).execute();
        } else {
            System.out.println("File access cancelled by user.");
        }
        System.out.println("load button click");
    }//GEN-LAST:event_loadButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            @Override
            public void run() {
                new GuiForm().setVisible(true);
            }
        });
    }
    
    void lauchTxt(){
        JFrame txtFrame = new JFrame("textFrame");
        JTextArea charField = new JTextArea(outTxt);
        //charField.setColumns(imageView2.getWidth());
        //charField.setRows(imageView2.getHeight());
        charField.setBackground(Color.black);
        charField.setForeground(Color.white);
        charField.setFont(new java.awt.Font("Tahoma", 0, 5));
        txtFrame.getContentPane().add(charField);//(emptyLabel, BorderLayout.CENTER);
        txtFrame.pack();
        txtFrame.setVisible(true);
        System.out.println("img H:"+imageView2.getHeight() + " " + "img W:" + imageView2.getWidth());
        System.out.println("charF H:"+charField.getHeight() + " " + "charF W:" + charField.getWidth());
        System.out.println("charF C:"+charField.getColumns() + " " + "charF R:" + charField.getRows());
        
    }
    
    void testLaunch(){
        /*
        //testy testy
        outTxt = "test";
        JFrame txtFrame = new JFrame("textFrame");
        JTextArea charField = new JTextArea(outTxt);
        charField.setFont(new java.awt.Font("Tahoma", 0, 8));
        charField.setColumns(imageView2.getWidth());
        charField.setRows(imageView2.getHeight());
        charField.setBackground(Color.black);
        charField.setForeground(Color.white);
        txtFrame.getContentPane().add(charField);//(emptyLabel, BorderLayout.CENTER);
        txtFrame.pack();
        txtFrame.setVisible(true);
        */
    }
    
    
    //unused
    Dimension setDim(){
        //Component[] cList = this.getComponents();
        return new Dimension(imageFrame1.getWidth() + imageFrame2.getWidth(), imageFrame1.getHeight() + loadButton.getHeight());
        
    }
    
    
    //unused
    private void resize(){
        System.out.println("imageFrame1 Height: " + imageFrame1.getHeight());
        System.out.println("loadButton Height: " + imageFrame1.getHeight());
        System.out.println("imageFrame1 Width: " + imageFrame1.getWidth());
        System.out.println("imageFrame2 Width: " + imageFrame2.getWidth());
        
        setSize(imageFrame1.getWidth() + imageFrame2.getWidth() + 20, imageFrame1.getHeight() + loadButton.getHeight() + 45);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JPanel imageFrame1;
    private javax.swing.JPanel imageFrame2;
    private javax.swing.JLabel imageView1;
    private javax.swing.JLabel imageView2;
    private javax.swing.JButton loadButton;
    private javax.swing.JTextField txtField;
    // End of variables declaration//GEN-END:variables
}
